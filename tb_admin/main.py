import time
import socket
import telebot
import sqlite3

bot = telebot.TeleBot('6163267213:AAHU6vh2OUCT3eYbLF-7pru93zFPvP2C78g')

admins = []

server_IP = '10.0.5.200'
server_PORT = 49999

def newAdmin(name: str, nick: str, chatid: str) -> None:
    ''' –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ò–º—è, –ù–∏–∫ –∏ chatid —Ç–µ–ª–µ–∂–∫–∏.'''
    database = sqlite3.connect('telegram.db')
    count_ta = database.cursor()
    cursor = database.cursor()

    count_ta.execute(f"SELECT COUNT(*) AS `COUNT` FROM adminTemp WHERE `chatid` = {chatid}")
    count_ta = count_ta.fetchall()
    for count in count_ta:
        if count[0] > 0:
            bot.send_message(chatid, '–í—ã —É–∂–µ –ø–æ–¥–∞–≤–∞–ª–∏ –∑–∞—è–≤–∫—É —Ä–∞–Ω–µ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ.')
        else:
            cursor.execute(f'INSERT INTO adminTemp ("name", "nickname", "chatid") VALUES ("{name}", "{nick}", {chatid})')
            database.commit()
            bot.send_message(chatid, '–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ.')
    database.close()

def allAdmins() -> None:
    '''–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å chatid –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏'''
    database = sqlite3.connect('telegram.db')
    cursor = database.cursor()
    cursor.execute("SELECT * from admins")
    rows = cursor.fetchall()
    for row in rows:
        admins.append(row[3])
    database.close()

def TempAdminList(chatid) -> None:
    '''–§—É–Ω–∫—Ü–∏—è –≤—ã–±–∏—Ä–∞–µ—Ç –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Ç–µ–º–ø–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è'''
    buttons = []
    tempAdmin = ''
    database = sqlite3.connect('telegram.db')
    cursor = database.cursor()
    cursor.execute("SELECT * FROM adminTemp")
    rows = cursor.fetchall()
    for row in rows:
        tempAdmin += f'{row[0]}: {row[1]} ({row[2]}) TelegramID: {row[3]}\n'
        buttons.append(telebot.types.InlineKeyboardButton(text=f'‚úÖ –ü—Ä–∏–Ω—è—Ç—å {row[1]}', callback_data=f'NEWADMINS:yes:{row[0]}:{row[3]}'))
        buttons.append(telebot.types.InlineKeyboardButton(text=f'üö´ –û—Ç–∫–ª–æ–Ω–∏—Ç—å {row[1]}', callback_data=f'NEWADMINS:no:{row[0]}:{row[3]}'))

    buttons.append(telebot.types.InlineKeyboardButton(text=f'–°–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É', callback_data=f'NEWADMINS:hide:key:board'))
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*list(buttons))
    bot.send_message(chatid, f'–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n{tempAdmin}', reply_markup=keyboard)


def AdminAllow(id, chatid) -> None:
    '''–§—É–Ω–∫—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'''
    database = sqlite3.connect('telegram.db')
    add_admin = database.cursor()
    del_admin = database.cursor()
    cursor = database.cursor()
    
    cursor.execute(f'SELECT * FROM adminTemp WHERE id = {id}')
    row = cursor.fetchone()
    add_admin.execute(f'INSERT INTO admins ("name", "nickname", "chatid") VALUES ("{row[1]}", "{row[2]}", "{row[3]}")')
    del_admin.execute(f'DELETE FROM adminTemp WHERE  id={id}')
    database.commit()

    bot.send_message(chatid, '–í–∞–º –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–æ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–∏—Å—Ç–µ–º—ã!')

    allAdmins()

def AdminDeny(id, chatid) -> None:
    '''–§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞–∑–∞ –≤ –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'''
    database = sqlite3.connect('telegram.db')
    cursor = database.cursor()
    cursor.execute(f'DELETE FROM adminTemp WHERE id={id}')
    database.commit()
    database.close()
    bot.send_message(chatid, '–í–∞–º –Ω–µ –±—ã–ª–æ –æ–¥–æ–±—Ä–µ–Ω–æ —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å–∏—Å—Ç–µ–º—ã!')

def DestroyKeyboard(chatid, client):
    '''–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –º–∞—à–∏–Ω—ã'''
    buttons = []

    buttons.append(telebot.types.InlineKeyboardButton(text=f'–î–∞', callback_data=f'DESTROY:yes:{client}'))
    buttons.append(telebot.types.InlineKeyboardButton(text=f'–ù–µ—Ç', callback_data=f'DESTROY:no:{client}'))
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*list(buttons))

    bot.send_message(chatid, f'–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å {client}?', reply_markup=keyboard)

def Destroy(client):
    '''–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥—É –Ω–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—é –∫–ª–∏–µ–Ω—Ç–∞'''
    try:
        server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
        server.connect((server_IP, server_PORT))

        start_message = 'name:telebot;'
        destroy_message = f'telebotdestroy:{client};'
        server.send(f'{start_message}{destroy_message}'.encode())
    except Exception as e:
        print(e)

def WhoOnLine(chatid):
    '''–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–µ—Ç–∏'''
    onlines = ''

    try:
        server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)
        server.connect((server_IP, server_PORT))

        start_message = 'name:telebot;'
        wol_message = 'wol:telebot;'        # wol - who online
        server.send(f'{start_message}{wol_message}'.encode())

        data = server.recv(2**20).decode();
        data = data.split(';')

        for d in data:
            da = d.split(':')
            if da[0] == 'telebot' or da[0] == 'checking':
                clients = da[1].split(',')
                
                buttons = []
                for client in clients:
                    if client == 'telebot' or client == '':
                        continue
                    onlines = onlines + f'{client}\n'
                    button = telebot.types.InlineKeyboardButton(text=f'–£–Ω–∏—á—Ç–æ–∂–∏—Ç—å {client}', callback_data=f'DANGER:{client}')
                    buttons.append(button)

                button = telebot.types.InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É', callback_data='DANGER:hidekeyboard')
                buttons.append(button)
                keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                keyboard.add(*list(buttons))

        bot.send_message(chatid, f'–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–µ—Ç–∏:\n{onlines}', reply_markup=keyboard)


    except Exception as e:
        print(e)
        bot.send_message(chatid, '–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!')

allAdmins() 

@bot.message_handler(commands=['start', 'opme', 'list', 'temps'])
def handle_command(message):
    text = message.text

    # –ö–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ
    if('/opme' in text):
        if(message.chat.id in admins):
            bot.send_message(message.chat.id, '–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!')
        else:
            newAdmin(message.from_user.first_name, message.from_user.username, message. chat.id)

    # –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ
    if (message.chat.id in admins):
        if('/start' in text):
            bot.send_message(message.chat.id, ':)')

        if('/list' in text):
            WhoOnLine(message.chat.id)

        if('/temps' in text):
            TempAdminList(message.chat.id)
    else:
        # –ö–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ
        pass

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
@bot.callback_query_handler(func=lambda call: call.data.startswith('DANGER:'))
def on_danger_button_clicked(call):
    client = call.data.split(':')[1] # –ø–æ–ª—É—á–∞–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ callback_data
    chatid = call.message.chat.id

    # –°–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    if client == 'hidekeyboard':
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)
    else:
        DestroyKeyboard(chatid, client)

@bot.callback_query_handler(func=lambda call: call.data.startswith('DESTROY:'))
def on_danger_button_clicked(call):
    choice = call.data.split(':')[1] # –ø–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ callback_data
    client = call.data.split(':')[2] # –ø–æ–ª—É—á–∞–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ callback_data

    if(choice == 'yes'):
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"{client} —É–Ω–∏—á—Ç–æ–∂–µ–Ω!")
        Destroy(client)
    if(choice == 'no'):
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

@bot.callback_query_handler(func=lambda call: call.data.startswith('NEWADMINS:'))
def on_danger_button_clicked(call):
    choice = call.data.split(':')[1] # –ø–æ–ª—É—á–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ callback_data
    user_id = call.data.split(':')[2] # –ø–æ–ª—É—á–∞–µ–º id A_I –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ callback_data
    chat_id = call.data.split(':')[3] # –ø–æ–ª—É—á–∞–µ–º chaid –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ callback_data

    if(choice == 'yes'):
        AdminAllow(user_id, chat_id)
    if(choice == 'no'):
        AdminDeny(user_id, chat_id)
    if(choice == 'hide'):
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=None)

bot.polling()